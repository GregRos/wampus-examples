/**
 * @module promise-stuff
 */ /** */
import { BasicPromise, BasicPromiseConstructor } from "./definitions";
export declare type WithEvents<TEvents extends string> = {
    addEventListener(event: TEvents, handler: (args: any) => void);
    removeEventListener(event: TEvents, handler: (args: any) => void);
} | {
    on(event: TEvents, handler: (args: any) => void);
    off(event: TEvents, handler: (args: any) => void);
} | {
    addListener(event: TEvents, handler: (args: any) => void);
    removeListener(event: TEvents, handler: (args: any) => void);
};
export declare class StaticOperators<P extends BasicPromise<any>> {
    private ctor;
    constructor(ctor: BasicPromiseConstructor<P>);
    /**
     * Static version of the `wait` function.
     * @see [[ExtendedPromiseConstructor.wait]]
     * @param {number | Date} time
     * @param {T} value
     * @returns {P}
     */
    wait<T = any>(time: number | Date, value?: T): P;
    /**
     * Static version of the `soon` function.
     * @see [[ExtendedPromiseConstructor.soon]]
     * @param {(() => T) | (() => PromiseLike<T>)} action
     * @returns {P}
     */
    soon<T = any>(action: ((() => T) | (() => PromiseLike<T>))): P;
    /**
     * Static version of the `never` function.
     * @see [[ExtendedPromiseConstructor.soon]]
     * @returns {P}
     */
    never(): P;
    /**
     * Static version of the `create` function.
     * @see [[ExtendedPromiseConstructor.create]]
     * @param {(resolve: (value: T) => void, reject: (reason: any) => void) => (void | PromiseLike<void>)} executor
     * @returns {P}
     */
    create<T = any>(executor: (resolve: (value: T) => void, reject: (reason: any) => void) => void | PromiseLike<void>): P;
    /**
     * Static version of the `from` function.
     * @param {PromiseLike<T>} other
     * @returns {P}
     * @see [[ExtendedPromiseConstructor.from]]
     */
    from<T = any>(other: PromiseLike<T>): P;
    eventOnce<TEvent extends string, TTarget extends WithEvents<TEvent>>(target: TTarget, event: TEvent): P;
    /**
     * Creates a new instance of the StaticOperators class.
     * @param {BasicPromiseConstructor<P extends BasicPromise<any>>} ctor The promise constructor wrapped by the static operator module.
     * @returns {StaticOperators<BasicPromise<any>>}
     */
    static create<P extends BasicPromise<any>>(ctor: BasicPromiseConstructor<P>): StaticOperators<P>;
}

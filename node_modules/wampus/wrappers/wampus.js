"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const wampus_session_1 = require("./wampus-session");
const core_session_1 = require("../core/session/core-session");
const dependency_selector_1 = require("./dependency-selector");
var Wampus;
(function (Wampus) {
    function create(config) {
        return __awaiter(this, void 0, void 0, function* () {
            let transportFactory = dependency_selector_1.DependencyDeclarations.transport(config.transport);
            let coreSession = yield core_session_1.WampusCoreSession.create({
                helloDetails: config.helloDetails,
                authenticator: config.authenticator,
                timeout: config.timeout,
                transport: transportFactory,
                realm: config.realm
            });
            return new wampus_session_1.WampusSession(coreSession, config.services);
        });
    }
    Wampus.create = create;
})(Wampus = exports.Wampus || (exports.Wampus = {}));
//# sourceMappingURL=wampus.js.map
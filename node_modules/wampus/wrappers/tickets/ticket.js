"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const _ = require("lodash");
class Ticket {
    static combine(tickets) {
        let flattenedOthers = _.flatMap(tickets, x => x instanceof CompoundTicket ? x._inner : [x]);
        return new CompoundTicket(flattenedOthers);
    }
    add(...others) {
        return Ticket.combine([this, ...others]);
    }
    using(actions) {
        return actions().then(x => {
            return this.close();
        });
    }
}
exports.Ticket = Ticket;
class CompoundTicket extends Ticket {
    constructor(_inner) {
        super();
        this._inner = _inner;
    }
    close() {
        return __awaiter(this, void 0, void 0, function* () {
            yield Promise.all(this._inner.map(ticket => ticket.close()));
        });
    }
}
exports.CompoundTicket = CompoundTicket;
//# sourceMappingURL=ticket.js.map